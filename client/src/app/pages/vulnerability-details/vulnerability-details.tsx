import React, { useState } from "react";
import { Link } from "react-router-dom";

import {
  Breadcrumb,
  BreadcrumbItem,
  Content,
  Flex,
  FlexItem,
  PageSection,
  Tab,
  TabContent,
  TabTitleText,
  Tabs,
} from "@patternfly/react-core";
import spacing from "@patternfly/react-styles/css/utilities/Spacing/spacing";

import { PathParam, Paths, useRouteParams } from "@app/Routes";
import { extendedSeverityFromSeverity } from "@app/api/models";
import { LoadingWrapper } from "@app/components/LoadingWrapper";
import { SeverityShieldAndText } from "@app/components/SeverityShieldAndText";
import { useFetchVulnerabilityById } from "@app/queries/vulnerabilities";

import { AdvisoriesByVulnerability } from "./advisories-by-vulnerability";
import { Overview } from "./overview";
import { SbomsByVulnerability } from "./sboms-by-vulnerability";

export const VulnerabilityDetails: React.FC = () => {
  const vulnerabilityId = useRouteParams(PathParam.VULNERABILITY_ID);

  const { vulnerability, isFetching, fetchError } =
    useFetchVulnerabilityById(vulnerabilityId);

  // Tabs
  const [activeTabKey, setActiveTabKey] = useState<string | number>(0);

  const handleTabClick = (
    _event: React.MouseEvent | React.KeyboardEvent | MouseEvent,
    tabIndex: string | number,
  ) => {
    setActiveTabKey(tabIndex);
  };

  const sbomsTabRef = React.createRef<HTMLElement>();
  const advisoriesTabRef = React.createRef<HTMLElement>();

  return (
    <>
      <PageSection type="breadcrumb">
        <Breadcrumb>
          <BreadcrumbItem>
            <Link to={Paths.vulnerabilities}>Vulnerabilities</Link>
          </BreadcrumbItem>
          <BreadcrumbItem isActive>Vulnerability details</BreadcrumbItem>
        </Breadcrumb>
      </PageSection>
      <PageSection>
        <Flex>
          <FlexItem>
            <Content>
              <Content component="h1">
                {vulnerability?.identifier ?? ""}{" "}
              </Content>
            </Content>
          </FlexItem>
          <FlexItem>
            {vulnerability && (
              <SeverityShieldAndText
                value={extendedSeverityFromSeverity(
                  vulnerability.average_severity,
                )}
                score={vulnerability.average_score}
                showLabel
                showScore
              />
            )}
          </FlexItem>
        </Flex>
        <div className={spacing.mtSm}>
          <LoadingWrapper isFetching={isFetching} fetchError={fetchError}>
            {vulnerability && <Overview vulnerability={vulnerability} />}
          </LoadingWrapper>
        </div>
      </PageSection>
      <PageSection>
        <Tabs
          mountOnEnter
          activeKey={activeTabKey}
          onSelect={handleTabClick}
          aria-label="Vulnerability detail tabs"
          role="region"
        >
          <Tab
            eventKey={0}
            title={<TabTitleText>Related SBOMs</TabTitleText>}
            tabContentId="refTabSbomsSection"
            tabContentRef={sbomsTabRef}
            aria-label="Related SBOMs for this Vulnerability"
          />
          <Tab
            eventKey={1}
            title={<TabTitleText>Related Advisories</TabTitleText>}
            tabContentId="refTabAdvisoriesSection"
            tabContentRef={advisoriesTabRef}
            aria-label="Advisories that explain the current Vulnerability"
          />
        </Tabs>
      </PageSection>
      <PageSection>
        {/** biome-ignore lint/correctness/useUniqueElementIds: allowed as Patternfly requires id*/}
        <TabContent
          eventKey={0}
          id="refTabSbomsSection"
          ref={sbomsTabRef}
          aria-label="Related SBOMs"
        >
          <SbomsByVulnerability vulnerabilityId={vulnerabilityId} />
        </TabContent>
        {/** biome-ignore lint/correctness/useUniqueElementIds: allowed as Patternfly requires id*/}
        <TabContent
          eventKey={1}
          id="refTabAdvisoriesSection"
          ref={advisoriesTabRef}
          aria-label="Related Advisories"
          hidden
        >
          <AdvisoriesByVulnerability
            isFetching={isFetching}
            fetchError={fetchError}
            advisories={vulnerability?.advisories || []}
          />
        </TabContent>
      </PageSection>
    </>
  );
};
